import { Enemy, Character } from './types'
import { inputBodyPart, BodyPart, body_parts_ru } from './BodyParts'

// –ø–∞—Ä–∞–º–µ—Ç—Ä
export function startArena(player: Character, enemy: Enemy) {
  print('–ë–∏—Ç–≤–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è!') // (–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ)
  
  // –ø–æ–∫–∞ –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å —Ö–ø
  while (true) {
    // –∏–≥—Ä–æ–∫ –∞—Ç–∞–∫—É–µ—Ç, NPC –±–ª–æ–∫–∏—Ä—É–µ—Ç

    const player_attack: BodyPart = inputBodyPart('attack')
    const npc_block: BodyPart = enemy.block()
    print(`–ë–ª–æ–∫ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ - ${body_parts_ru[npc_block]}`)

    if (player_attack !== npc_block) {
      enemy.stats.hp -= player.strength 
      print(`üë§üéØ –¢—ã –ø–æ–ø–∞–ª –≤ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞. –£ –≤—Ä–∞–≥–∞ –æ—Å—Ç–∞–ª–æ—Å—å ${enemy.stats.hp}‚ù§Ô∏è`)

      if (!enemy.stats.hp) {
        print('–¢—ã –≤—ã–π–≥—Ä–∞–ª. –ò–¥–∏ —Ä–∞–±–æ—Ç–∞–π, –∞ –Ω–µ –∏–≥—Ä–∞–π –≤ —Å–≤–æ–∏ –∏–≥—Ä—É–ª–∫–∏)')
        return
      }
    }
    else {
      print(`üë§ –¢—ã –ø—Ä–æ–º–∞–∑–∞–ª. –£ –≤—Ä–∞–≥–∞ —Ç–∞–∫ –∏ –æ—Å—Ç–∞–ª–æ—Å—å ${enemy.stats.hp}‚ù§Ô∏èüò±üò±üò±.`)
    }

    // NPC –∞—Ç–∞–∫—É–µ—Ç, –∏–≥—Ä–æ–∫ –±–ª–æ–∫–∏—Ä—É–µ—Ç

    const player_block = inputBodyPart('block')
    const npc_attack: BodyPart = enemy.attack()
    print(`–¶–µ–ª—å –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ - ${body_parts_ru[npc_block]}`)

    if (npc_attack !== player_block) {
      player.hp -= enemy.stats.strength
      if (player.hp < 0) {
        player.hp = 0
      }
      print(`ü§ñüéØ –í —Ç–µ–±—è –ø–æ–ø–∞–ª –±–æ—Ç. –î–∞–≤–∞–π –ø—Ä–∏–¥—É–º—ã–≤–∞–π –∫–∞–∫ –ø–æ–¥–Ω—è—Ç—å —Å–≤–æ—é —É–¥–∞—á—É) —É —Ç–µ–±—è –æ—Å—Ç–∞–ª–æ—Å—å ${player.hp}‚ù§Ô∏è`)

      if (!player.hp) {
        print('–¢—ã –ø—Ä–æ–∏—Ä–≥–∞–ª. –¢–µ–±–µ –Ω–∞–¥–æ —Ç—Ä–µ–Ω–µ—Ä–µ–≤–æ—Ç—Å—è)')
        return
      }
    }
    else {
      print(`ü§ñ –ë–æ—Ç –≤ —Ç–µ–±—è –Ω–µ –ø–æ–ø–∞–ª, —Ä–∞–¥—É–π—Å—è. –£ —Ç–µ–±—è —Ç–∞–∫ –∏ –æ—Å—Ç–∞–ª–æ—Å—å ${player.hp}‚ù§Ô∏è`)
    }
  }
}